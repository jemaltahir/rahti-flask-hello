name: Build and Push Image
on: [workflow_dispatch]
# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

jobs:
  build-image:
    name: Build image without Containerfile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          base-image: "registry.fedoraproject.org/f35/python3"
          image: my-flask-app
          tags: latest ${{ github.sha }}

      - name: Push To Quay Action
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        if: >
          (github.event_name == 'push' || github.event_name == 'schedule') &&
          (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: quay.io/${{ secrets.QUAY_USERNAME }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  deploy:
    needs: build-image
    runs-on: ubuntu-latest

    outputs:
      ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
      SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}

    env:
      APP_NAME: "course-flask-demo"
      OPENSHIFT_NAMESPACE: adeployer
      APP_PORT: 8080

    steps:
      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          # URL to your OpenShift cluster.
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}

          # Authentication Token.
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          # Disables SSL cert checking. Use this if you don't have the certificate authority data.
          insecure_skip_tls_verify: true
          # This method is more secure, if the certificate from Step 4 is available.
          # certificate_authority_data: ${{ secrets.CA_DATA }}

          # Optional - this sets your Kubernetes context's current namespace after logging in.
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}

      - name: Create and expose app
        id: deploy-and-expose
        uses: redhat-actions/oc-new-app@v1
        with:
          app_name: ${{ env.APP_NAME }}
          image: quay.io/jemalmtahir/my-flask-app:latest
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}
          port: ${{ env.APP_PORT }}

      - name: Testing pod outputs
        run: |
          oc -n  ${{ env.OPENSHIFT_NAMESPACE }} get pods -owide
          echo "----------------------"
          oc get pods -owide
