name: Build and Push Image
on: [workflow_dispatch]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup S2i and Build container image
      - name: Setup and Build
        id: build_image
        env:
          IMAGE_NAME: flask-app
          TAGS: latest ${{ github.sha }}
        uses: redhat-actions/s2i-build@v2
        with:
          path_context: "."
          # Builder image for a java project
          builder_image: "centos/python-38-centos7"
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.TAGS }}

      # Push Image to Quay registry
      - name: Push To Quay Action
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: quay.io/${{ secrets.QUAY_USERNAME }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout action
        uses: actions/checkout@v3

      - name: OpenShift login
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
          insecure_skip_tls_verify: true

      - name: Create and expose app
        id: oc-new-app
        uses: redhat-actions/oc-new-app@v1
        env:
          IMAGE_NAME: flask-app
          OPENSHIFT_NAMESPACE: adeployer
        with:
          app_name: ${{ env.APP_NAME }}
          image: quay.io/${{ secrets.QUAY_USERNAME }}/${{ env.IMAGE_NAME}}:latest
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.oc-new-app.outputs) }}"

      - name: Testing pod outputs
        run: |
          oc -n  ${{ env.OPENSHIFT_NAMESPACE }} get pods -owide
          echo "----------------------"
          oc get pods -owide
